Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_divmodsi4.o)
                              main.o (__divmodsi4)
/usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_negsi2.o)
                              /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_divmodsi4.o) (__negsi2)
/usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o (exit)
/usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
                              main.o (__mulsidi3)
/usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_mulsidi3.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_mulsidi3.o) (__epilogue_restores__)
/usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_divmodsi4.o) (__udivmodsi4)
/usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_muldi3.o)
                              /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_mulsidi3.o) (__muldi3)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
LOAD main.o
LOAD i2cmaster.o
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x35c
 *(.vectors)
 .vectors       0x0000000000000000       0x14 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000014                . = ALIGN (0x2)
                0x0000000000000014                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000014        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000014                __trampolines_end = .
 *(.progmem*)
                0x0000000000000014                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000014                __ctors_start = .
 *(.ctors)
                0x0000000000000014                __ctors_end = .
                0x0000000000000014                __dtors_start = .
 *(.dtors)
                0x0000000000000014                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000014        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
                0x0000000000000014                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000014        0x8 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000001c       0x16 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
                0x000000000000001c                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000032        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
 *(.init9)
 *(.text)
 .text          0x0000000000000036        0x2 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
                0x0000000000000036                __vector_1
                0x0000000000000036                __bad_interrupt
                0x0000000000000036                __vector_6
                0x0000000000000036                __vector_3
                0x0000000000000036                __vector_7
                0x0000000000000036                __vector_5
                0x0000000000000036                __vector_4
                0x0000000000000036                __vector_9
                0x0000000000000036                __vector_2
                0x0000000000000036                __vector_8
 .text          0x0000000000000038       0x76 main.o
                0x0000000000000038                setFrequency
 .text          0x00000000000000ae       0xce i2cmaster.o
                0x00000000000000be                i2c_init
                0x00000000000000c8                i2c_start
                0x00000000000000d0                i2c_rep_start
                0x00000000000000e4                i2c_start_wait
                0x00000000000000f8                i2c_stop
                0x0000000000000108                i2c_write
                0x0000000000000140                i2c_readNak
                0x0000000000000144                i2c_readAck
                0x0000000000000146                i2c_read
 .text          0x000000000000017c        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_divmodsi4.o)
 .text          0x000000000000017c        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_negsi2.o)
 .text          0x000000000000017c        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text          0x000000000000017c        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text          0x000000000000017c        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
 .text          0x000000000000017c        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_prologue.o)
 .text          0x000000000000017c        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_epilogue.o)
 .text          0x000000000000017c        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
 .text          0x000000000000017c        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_muldi3.o)
                0x000000000000017c                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000017c       0x70 main.o
                0x000000000000017c                main
 .text.libgcc.mul
                0x00000000000001ec        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_divmodsi4.o)
 .text.libgcc.div
                0x00000000000001ec       0x28 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_divmodsi4.o)
                0x00000000000001ec                __divmodsi4
 .text.libgcc   0x0000000000000214        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_divmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000214        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_divmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000214        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_divmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000214        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_divmodsi4.o)
 .text.libgcc.fixed
                0x0000000000000214        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_divmodsi4.o)
 .text.libgcc.mul
                0x0000000000000214        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_negsi2.o)
 .text.libgcc.div
                0x0000000000000214       0x10 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_negsi2.o)
                0x0000000000000214                __negsi2
 .text.libgcc   0x0000000000000224        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_negsi2.o)
 .text.libgcc.prologue
                0x0000000000000224        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_negsi2.o)
 .text.libgcc.builtins
                0x0000000000000224        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_negsi2.o)
 .text.libgcc.fmul
                0x0000000000000224        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_negsi2.o)
 .text.libgcc.fixed
                0x0000000000000224        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_negsi2.o)
 .text.libgcc.mul
                0x0000000000000224        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000224        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000224        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000224        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000224        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000224        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000224        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000224        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000224        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000224        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000224        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000224        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000224        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000224        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000224       0x3a /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
                0x0000000000000224                __mulsidi3
                0x0000000000000228                __umulsidi3
 .text.libgcc.div
                0x000000000000025e        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
 .text.libgcc   0x000000000000025e        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
 .text.libgcc.prologue
                0x000000000000025e        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
 .text.libgcc.builtins
                0x000000000000025e        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
 .text.libgcc.fmul
                0x000000000000025e        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
 .text.libgcc.fixed
                0x000000000000025e        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
 .text.libgcc.mul
                0x000000000000025e        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_prologue.o)
 .text.libgcc.div
                0x000000000000025e        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_prologue.o)
 .text.libgcc   0x000000000000025e        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_prologue.o)
 .text.libgcc.prologue
                0x000000000000025e       0x2e /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_prologue.o)
                0x000000000000025e                __prologue_saves__
 .text.libgcc.builtins
                0x000000000000028c        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_prologue.o)
 .text.libgcc.fmul
                0x000000000000028c        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_prologue.o)
 .text.libgcc.fixed
                0x000000000000028c        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_prologue.o)
 .text.libgcc.mul
                0x000000000000028c        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_epilogue.o)
 .text.libgcc.div
                0x000000000000028c        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_epilogue.o)
 .text.libgcc   0x000000000000028c        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_epilogue.o)
 .text.libgcc.prologue
                0x000000000000028c       0x2c /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_epilogue.o)
                0x000000000000028c                __epilogue_restores__
 .text.libgcc.builtins
                0x00000000000002b8        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_epilogue.o)
 .text.libgcc.fmul
                0x00000000000002b8        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_epilogue.o)
 .text.libgcc.fixed
                0x00000000000002b8        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_epilogue.o)
 .text.libgcc.mul
                0x00000000000002b8        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x00000000000002b8       0x44 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
                0x00000000000002b8                __udivmodsi4
 .text.libgcc   0x00000000000002fc        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x00000000000002fc        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x00000000000002fc        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x00000000000002fc        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x00000000000002fc        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x00000000000002fc       0x5c /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_muldi3.o)
                0x00000000000002fc                __muldi3
 .text.libgcc.div
                0x0000000000000358        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_muldi3.o)
 .text.libgcc   0x0000000000000358        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_muldi3.o)
 .text.libgcc.prologue
                0x0000000000000358        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_muldi3.o)
 .text.libgcc.builtins
                0x0000000000000358        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_muldi3.o)
 .text.libgcc.fmul
                0x0000000000000358        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_muldi3.o)
 .text.libgcc.fixed
                0x0000000000000358        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_muldi3.o)
                0x0000000000000358                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000358        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
                0x0000000000000358                exit
                0x0000000000000358                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000358        0x4 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000035c                _etext = .

.data           0x0000000000800060        0x2 load address 0x000000000000035c
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
 .data          0x0000000000800060        0x2 main.o
                0x0000000000800060                frequency
 .data          0x0000000000800062        0x0 i2cmaster.o
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_negsi2.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_prologue.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_epilogue.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_muldi3.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800062                . = ALIGN (0x2)
                0x0000000000800062                _edata = .
                0x0000000000800062                PROVIDE (__data_end, .)

.bss            0x0000000000800062        0x0
                0x0000000000800062                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
 .bss           0x0000000000800062        0x0 main.o
 .bss           0x0000000000800062        0x0 i2cmaster.o
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_divmodsi4.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_negsi2.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_prologue.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_epilogue.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_muldi3.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800062                PROVIDE (__bss_end, .)
                0x000000000000035c                __data_load_start = LOADADDR (.data)
                0x000000000000035e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800062        0x0
                0x0000000000800062                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800062                PROVIDE (__noinit_end, .)
                0x0000000000800062                _end = .
                0x0000000000800062                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0xc24
 *(.stab)
 .stab          0x0000000000000000      0x654 main.o
 .stab          0x0000000000000654      0x5d0 i2cmaster.o
                                        0x5dc (size before relaxing)

.stabstr        0x0000000000000000      0xc81
 *(.stabstr)
 .stabstr       0x0000000000000000      0xc81 main.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
__data_end                                        /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
__divmodsi4                                       /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_divmodsi4.o)
                                                  main.o
__do_copy_data                                    /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_copy_data.o)
                                                  main.o
__epilogue_restores__                             /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_epilogue.o)
                                                  /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
__heap_end                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
__init                                            /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
__muldi3                                          /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_muldi3.o)
                                                  /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
__mulsidi3                                        /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
                                                  main.o
__negsi2                                          /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_negsi2.o)
                                                  /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_divmodsi4.o)
__prologue_saves__                                /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_prologue.o)
                                                  /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
__stack                                           /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
__udivmodsi4                                      /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_udivmodsi4.o)
                                                  /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_divmodsi4.o)
__umulsidi3                                       /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_mulsidi3.o)
__vector_1                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
__vector_2                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
__vector_3                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
__vector_4                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
__vector_5                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
__vector_6                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
__vector_7                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
__vector_8                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
__vector_9                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
__vector_default                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
__vectors                                         /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
_exit                                             /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
exit                                              /usr/lib/gcc/avr/4.8.1/avr25/tiny-stack/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
frequency                                         main.o
i2c_init                                          i2cmaster.o
                                                  main.o
i2c_read                                          i2cmaster.o
i2c_readAck                                       i2cmaster.o
i2c_readNak                                       i2cmaster.o
i2c_rep_start                                     i2cmaster.o
i2c_start                                         i2cmaster.o
                                                  main.o
i2c_start_wait                                    i2cmaster.o
i2c_stop                                          i2cmaster.o
                                                  main.o
i2c_write                                         i2cmaster.o
                                                  main.o
main                                              main.o
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/tiny-stack/crttn13.o
setFrequency                                      main.o
